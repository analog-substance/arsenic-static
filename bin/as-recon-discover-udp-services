#! /bin/bash

if [[ -z "$NMAP" ]]; then
  NMAP="nmap"
fi

skip_host_discovery=$($NMAP --help | grep "skip host discovery" | awk '{print $1}' | sed 's/://g')
if [[ -z "$skip_host_discovery" ]]; then
  skip_host_discovery="-Pn"
fi

accurate_punch() {
  echo "[+] scanning UDP $1"
  sudo $NMAP -oA recon/nmap-punched-udp -sUV -p- $skip_host_discovery --max-rtt-timeout 100ms --min-rate 1000 --version-intensity 0 "$1"
  sed -i 's|"[^"]*nmap\.xsl"|"/static/nmap.xsl"|g' recon/nmap-punched-udp.xml
}

try_punch(){
  base_dir="hosts/$ip"
  mkdir -p $base_dir/loot/passwords $base_dir/recon
  if ! compgen -G "hosts/$host/recon/nmap-*udp*" > /dev/null 2>&1; then
    cd $base_dir
    accurate_punch $ip
    cd - >/dev/null 2>&1
  else
    echo "[!] Skipping since it was already done"
  fi
}

fist_fight(){
  echo '[!] The fight is about to start ðŸ””'
  i=0
  while read ip; do
    i=$(( i + 1))
    try_punch &
    if [ $i -eq 3 ]; then
      while sleep 1; do
        i=$(jobs | wc -l)
        if [ $i -lt 3 ]; then
          break;
        fi
      done
    fi
  done
  wait
  echo '[!] The fist fight is over ðŸŽ‰'
}

if [[ -z "$1" && -t 0 ]]; then
  name=$(basename $0)
  echo "$name [ scope_file | target ]"
  echo "[echo/cat target/scope_file] | $name"
  exit 1
fi

targets=""
if [ -t 0 ]; then
  if [ -f $1 ]; then
    targets=$(cat $1)
  else
    targets="$1"
  fi
else # if input is piped in
  while read target; do
    if [ -z "$target" ]; then
      continue
    fi

    if [[ -z "$targets" ]]; then
      targets="$target"
    else
      targets=$(echo -e "$targets\n$target")
    fi
  done
fi

count=$(echo "$targets" | wc -l)
if [ $count -gt 1 ]; then
  # it was a file, lets treat each line as a host
  echo "$targets" | fist_fight
else
  # treat it as a host
  accurate_punch "$targets"
fi
